{"version":3,"file":"wx.cjs.js","sources":["../src/wx.ts"],"sourcesContent":["import merge from 'lodash-es/merge'\nimport type { RequiredProperty, ResponseResult } from './shared'\nimport { ResponseError } from './shared'\n\nexport * from './shared'\n\ntype BaseResponse = string | object | ArrayBuffer\n\ninterface WechatResponse<T extends BaseResponse = BaseResponse> extends WechatMiniprogram.RequestSuccessCallbackResult {\n  data: T\n}\n/**\n * 拦截器\n */\nexport interface WechatRequestInterceptors<T extends object> {\n  request?: (value: WechatRequestConfig<T>) => WechatRequestConfig<T> | Promise<WechatRequestConfig<T>>\n  requestError?: (error: any) => (Promise<any> | any)\n  response?: ((value: { config: WechatRequestConfig<T>, response: WechatResponse }) => WechatResponse | Promise< WechatResponse>)\n  responseError?: (error: ResponseError<WechatRequestConfig<T>>) => (Promise<any> | any)\n}\n/**\n * RequestBaseConfig 请求配置\n */\nexport interface WechatRequestBaseConfig extends Partial<Omit<WechatMiniprogram.RequestOption, 'success' | 'fail' | 'complete'>> {\n  /**\n   * 公共url\n   */\n  baseUrl?: string\n  /**\n   * get 请求参数\n   */\n  params?: any\n  /**\n   * 返回原生响应 AppResponse<T> 默认false\n   */\n  getResponse?: boolean\n  /**\n   * 忽略 loading 提示\n   */\n  ignoreLoading?: boolean\n}\n\n/**\n *  返回原生响应 AppResponse<T>\n */\ninterface WechatRequestGetResponseConfig {\n  getResponse: true\n};\n\n/**\n * 用户自定义请求配置\n */\nexport type WechatRequestConfig<T extends object> = WechatRequestBaseConfig & T\n\n/**\n * 用户自定义请求配置\n */\ntype WechatRequestConfigWithoutMethod<T extends object> =\nRequiredProperty<Omit<WechatRequestBaseConfig, 'method' | 'baseUrl'>, 'url'> & T\n\n/**\n * 用户自定义 get 请求配置 get 请求参设置请使用 params 而不是 data\n */\ntype WechatRequestGetConfigWithoutMethod<T extends object> = RequiredProperty<Omit<WechatRequestBaseConfig, 'method' | 'baseUrl' | 'data'>, 'url'> & T\n/**\n * 实现\n */\nexport class WxRequest<T extends object> {\n  /**\n   * 基础配置\n   */\n  private baseConfig: WechatRequestConfig<T>\n  /**\n   * 拦截器\n   */\n  private interceptors?: WechatRequestInterceptors<T>\n  /**\n   * @param options 基础配置\n   * @param interceptors 拦截器\n   */\n  constructor(options: WechatRequestConfig<T>, interceptors?: WechatRequestInterceptors<T>) {\n    this.baseConfig = {\n      ...options,\n    }\n    this.interceptors = interceptors\n  }\n\n  get<D extends object>(config: WechatRequestGetConfigWithoutMethod<T> & WechatRequestGetResponseConfig): Promise< WechatResponse<ResponseResult<D>>>\n  get<D extends object>(config: WechatRequestGetConfigWithoutMethod<T>): Promise<ResponseResult<D>>\n  get<D extends object>(config: WechatRequestGetConfigWithoutMethod<T>): Promise< WechatResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'GET' })\n  }\n\n  post<D extends object>(config: WechatRequestConfigWithoutMethod<T> & WechatRequestGetResponseConfig): Promise< WechatResponse<ResponseResult<D>>>\n  post<D extends object>(config: WechatRequestConfigWithoutMethod<T>): Promise<ResponseResult<D>>\n  post<D extends object>(config: WechatRequestConfigWithoutMethod<T>): Promise< WechatResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'POST' })\n  }\n\n  put<D extends object>(config: WechatRequestConfigWithoutMethod<T> & WechatRequestGetResponseConfig): Promise< WechatResponse<ResponseResult<D>>>\n  put<D extends object>(config: WechatRequestConfigWithoutMethod<T>): Promise<ResponseResult<D>>\n  put<D extends object>(config: WechatRequestConfigWithoutMethod<T>): Promise< WechatResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'PUT' })\n  }\n\n  delete<D extends object>(config: WechatRequestConfigWithoutMethod<T> & WechatRequestGetResponseConfig): Promise< WechatResponse<ResponseResult<D>>>\n  delete<D extends object>(config: WechatRequestConfigWithoutMethod<T>): Promise<ResponseResult<D>>\n  delete<D extends object>(config: WechatRequestConfigWithoutMethod<T>): Promise< WechatResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'DELETE' })\n  }\n\n  async request<D extends object>(config: WechatRequestConfig<T> & WechatRequestGetResponseConfig): Promise< WechatResponse<ResponseResult<D>>>\n  async request<D extends object>(config: WechatRequestConfig<T>): Promise<ResponseResult<D>>\n  async request<D extends object>(config: WechatRequestConfig<T>): Promise< WechatResponse<D> | ResponseResult<D>> {\n    let _config = merge({}, this.baseConfig, config)\n    try {\n      _config = await this.interceptors?.request?.(_config) || _config\n    }\n    catch (error) {\n      this.interceptors?.requestError?.(error)\n      throw error\n    }\n\n    return new Promise((resolve, reject) => {\n      wx.request({\n        ..._config as WechatMiniprogram.RequestOption,\n        success: async (response) => {\n          const userResponse = await this.interceptors?.response?.({ config: _config, response }) as WechatResponse<D>\n          resolve(userResponse || response)\n        },\n        fail: (error) => {\n          if (error instanceof Error) {\n            const requestError = new ResponseError(error.message, _config)\n            this.interceptors?.responseError?.(requestError)\n            throw requestError\n          }\n\n          reject(error)\n        },\n      })\n    })\n  }\n}\n"],"names":["baseConfig","interceptors","constructor","options","this","get","config","request","method","post","put","_config","merge","error","requestError","Promise","resolve","reject","wx","success","async","response","userResponse","fail","Error","ResponseError","message","responseError"],"mappings":"0UAuEUA,WAIAC,aAKR,WAAAC,CAAYC,EAAiCF,GAC3CG,KAAKJ,WAAa,IACbG,GAELC,KAAKH,aAAeA,CACrB,CAID,GAAAI,CAAsBC,GACpB,OAAOF,KAAKG,QAAQ,IAAKD,EAAQE,OAAQ,OAC1C,CAID,IAAAC,CAAuBH,GACrB,OAAOF,KAAKG,QAAQ,IAAKD,EAAQE,OAAQ,QAC1C,CAID,GAAAE,CAAsBJ,GACpB,OAAOF,KAAKG,QAAQ,IAAKD,EAAQE,OAAQ,OAC1C,CAID,OAAyBF,GACvB,OAAOF,KAAKG,QAAQ,IAAKD,EAAQE,OAAQ,UAC1C,CAID,aAAMD,CAA0BD,GAC9B,IAAIK,EAAUC,EAAAA,MAAM,CAAA,EAAIR,KAAKJ,WAAYM,GACzC,IACEK,QAAgBP,KAAKH,cAAcM,UAAUI,KAAYA,CAC1D,CACD,MAAOE,GAEL,MADAT,KAAKH,cAAca,eAAeD,GAC5BA,CACP,CAED,OAAO,IAAIE,SAAQ,CAACC,EAASC,KAC3BC,GAAGX,QAAQ,IACNI,EACHQ,QAASC,MAAOC,IACd,MAAMC,QAAqBlB,KAAKH,cAAcoB,WAAW,CAAEf,OAAQK,EAASU,cAC5EL,EAAQM,GAAgBD,EAAS,EAEnCE,KAAOV,IACL,GAAIA,aAAiBW,MAAO,CAC1B,MAAMV,EAAe,IAAIW,EAAaA,cAACZ,EAAMa,QAASf,GAEtD,MADAP,KAAKH,cAAc0B,gBAAgBb,GAC7BA,CACP,CAEDG,EAAOJ,EAAM,GAEf,GAEL"}