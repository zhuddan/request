import{m as e,a as t}from"./merge-bphEnWaa.js";export{C as ContentTypeEnum,R as RequestMethodsEnum}from"./merge-bphEnWaa.js";class s{baseConfig;interceptors;constructor(e,t){this.baseConfig={...e},this.interceptors=t}get(e){return this.request({...e,method:"GET"})}post(e){return this.request({...e,method:"POST"})}put(e){return this.request({...e,method:"PUT"})}delete(e){return this.request({...e,method:"DELETE"})}async request(s){let r=e({},this.baseConfig,s);try{r=await(this.interceptors?.request?.(r))||r}catch(e){throw this.interceptors?.requestError?.(e),e}return new Promise(((e,s)=>{wx.request({...r,success:async t=>{const s=await(this.interceptors?.response?.({config:r,response:t}));e(s||t)},fail:e=>{if(e instanceof Error){const s=new t(e.message,r);throw this.interceptors?.responseError?.(s),s}s(e)}})}))}}export{t as ResponseError,s as WxRequest};
//# sourceMappingURL=wx.esm.js.map
