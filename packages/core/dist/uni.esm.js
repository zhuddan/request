import{m as e,a as t}from"./merge-bphEnWaa.js";export{C as ContentTypeEnum,R as RequestMethodsEnum}from"./merge-bphEnWaa.js";class r{baseConfig;interceptors;constructor(e,t){this.baseConfig={...e},this.interceptors=t}get(e){return this.request({...e,method:"GET"})}post(e){return this.request({...e,method:"POST"})}put(e){return this.request({...e,method:"PUT"})}delete(e){return this.request({...e,method:"DELETE"})}async request(r){let s=e({},this.baseConfig,r);try{s=await(this.interceptors?.request?.(s))||s}catch(e){throw console.log("interceptors?.requestError ",e),this.interceptors?.requestError?.(e),e}try{const e=await uni.request(s);return await(this.interceptors?.response?.({config:s,response:e}))||e}catch(e){if(e instanceof Error){const r=new t(e.message,s);throw this.interceptors?.responseError?.(r),r}throw e}}}export{t as ResponseError,r as UniRequest};
//# sourceMappingURL=uni.esm.js.map
