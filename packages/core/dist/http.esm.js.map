{"version":3,"file":"http.esm.js","sources":["../src/http.ts"],"sourcesContent":["import type { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse, InternalAxiosRequestConfig } from 'axios'\nimport axios from 'axios'\nimport Qs from 'qs'\nimport merge from 'lodash-es/merge'\nimport { ContentTypeEnum, RequestMethodsEnum } from './shared'\nimport type { ResponseResult } from './shared'\n\nexport * from './shared'\n\n/**\n * RequestConfig 配置\n */\nexport interface HttpRequestBaseConfig extends AxiosRequestConfig {\n  /**\n   * @description 返回原生响应 AxiosResponse<T> 默认false\n   */\n  getResponse?: boolean\n}\n\n/**\n *  返回原生响应\n */\ninterface HttpRequestGetResponseConfig {\n  getResponse: true\n};\n\nexport type HttpRequestConfig<T extends object> = HttpRequestBaseConfig & T\n/**\n * RequestConfig 配置( 去除 method 为了给具体请求函数使用 get / post ...)\n */\nexport type HttpRequestConfigWithoutMethod<T extends object> = Omit<HttpRequestBaseConfig, 'method'> & T\n\nexport type HttpRequestGetConfigWithoutMethod<T extends object> = Omit<HttpRequestBaseConfig, 'method' | 'data'> & T\n\n/**\n * 拦截器\n */\nexport interface HttpRequestInterceptors<T extends object> {\n  request?: (value: HttpRequestConfig<T>) => HttpRequestConfig<T> | Promise<HttpRequestConfig<T>>\n  requestError?: (error: any) => (Promise<any> | any)\n  response?: ((value: AxiosResponse<any, any>) => AxiosResponse<any, any> | Promise<AxiosResponse<any, any>>) | null | undefined\n  responseError?: (error: any) => (Promise<any> | any)\n}\n/**\n * 实现\n */\nexport class HttpRequest<CustomConfig extends object> {\n  /**\n   * @description axios 实例\n   */\n  private axiosInstance: AxiosInstance\n  /**\n   * @description 基础配置\n   */\n  private baseConfig: HttpRequestConfig<CustomConfig>\n\n  /**\n   *\n   * @param options 基础配置\n   * @param interceptors 拦截器\n   */\n  constructor(options: HttpRequestConfig<CustomConfig>, interceptors?: HttpRequestInterceptors<CustomConfig>) {\n    this.baseConfig = {\n      ...options,\n    }\n\n    this.axiosInstance = axios.create(this.baseConfig)\n\n    const {\n      request,\n      response,\n      requestError,\n      responseError,\n    } = interceptors || {}\n\n    this.axiosInstance.interceptors.request.use(async (config) => {\n      const value = await (request?.(config as HttpRequestConfig<CustomConfig>) || config)\n      return value as InternalAxiosRequestConfig\n    }, (e) => {\n      requestError?.(e)\n    })\n    this.axiosInstance.interceptors.response.use((data) => {\n      return (response?.(data) || data)\n    }, ((error: any) => {\n      return responseError?.(error) || Promise.reject(error)\n    }) as any)\n  }\n\n  /**\n   * 文件上传\n   * @param config\n   * @param params\n   */\n  uploadFile<T extends object = object>(config: AxiosRequestConfig, params: Record<string, any> = {}) {\n    const formData = new window.FormData()\n    const customFilename = params.name || 'file'\n\n    if (params.filename) {\n      formData.append(customFilename, params.file, params.filename)\n    }\n    else {\n      formData.append(customFilename, params.file)\n    }\n\n    if (params.data) {\n      Object.keys(params.data).forEach((key) => {\n        const value = params.data![key]\n        if (Array.isArray(value)) {\n          value.forEach((item) => {\n            formData.append(`${key}[]`, item)\n          })\n          return\n        }\n        formData.append(key, params.data![key])\n      })\n    }\n\n    return this.axiosInstance.request<T>({\n      ...config,\n      method: 'POST',\n      data: formData,\n      headers: {\n        'Content-type': ContentTypeEnum.FORM_DATA,\n      },\n    })\n  }\n\n  /**\n   * 格式化 formdata\n   * @param config\n   */\n  formatFormData(config: AxiosRequestConfig) {\n    const headers = config.headers || this.baseConfig.headers\n    const contentType = headers?.['Content-Type'] || headers?.['content-type']\n    if (\n      (contentType !== ContentTypeEnum.FORM_URLENCODED)\n      || (config.data && typeof config.data == 'object' && Object.keys(config.data.length))\n      || config.method?.toUpperCase() === RequestMethodsEnum.GET\n    ) {\n      return config as HttpRequestConfig<CustomConfig>\n    }\n    return {\n      ...config,\n      data: Qs.stringify(config.data, { arrayFormat: 'brackets' }),\n    } as HttpRequestConfig<CustomConfig>\n  }\n\n  /**\n   * get 请求\n   * @param config\n   */\n  get<D extends object>(config: HttpRequestGetConfigWithoutMethod<CustomConfig> & HttpRequestGetResponseConfig): Promise<AxiosResponse<ResponseResult<D>>>\n  get<D extends object>(config: HttpRequestGetConfigWithoutMethod<CustomConfig>): Promise<ResponseResult<D>>\n  get<D extends object>(config: HttpRequestGetConfigWithoutMethod<CustomConfig>): Promise<AxiosResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'get' })\n  }\n\n  post<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig> & HttpRequestGetResponseConfig): Promise<AxiosResponse<ResponseResult<D>>>\n  post<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig>): Promise<ResponseResult<D>>\n  post<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig>): Promise<AxiosResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'post' })\n  }\n\n  put<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig> & HttpRequestGetResponseConfig): Promise<AxiosResponse<ResponseResult<D>>>\n  put<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig>): Promise<ResponseResult<D>>\n  put<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig>): Promise<AxiosResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'put' })\n  }\n\n  delete<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig> & HttpRequestGetResponseConfig): Promise<AxiosResponse<ResponseResult<D>>>\n  delete<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig>): Promise<ResponseResult<D>>\n  delete<D extends object>(config: HttpRequestConfigWithoutMethod<CustomConfig>): Promise<AxiosResponse<D> | ResponseResult<D>> {\n    return this.request({ ...config, method: 'delete' })\n  }\n\n  request<D extends object>(config: HttpRequestConfig<CustomConfig> & {\n    getResponse: true\n  }): Promise<AxiosResponse<ResponseResult<D>>>\n  request<D extends object>(config: HttpRequestConfig<CustomConfig>): Promise<ResponseResult<D>>\n  request<D extends object>(config: HttpRequestConfig<CustomConfig>): Promise<AxiosResponse<D> | ResponseResult<D>> {\n    const _config = merge({}, this.baseConfig, this.formatFormData(config))\n    return this.axiosInstance.request(_config)\n  }\n}\n"],"names":[],"mappings":"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"}